<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.tanxinzheng.module.authorization.mapper.PermissionMapper" >

    <sql id="Base_Columns">
        ID,
        PERMISSION_KEY,
        PERMISSION_GROUP,
        PERMISSION_URL,
        PERMISSION_ACTION,
        DESCRIPTION,
        ACTIVE,
        PARENT_ID,
        CREATED_USER_ID,
        CREATED_TIME,
        UPDATED_USER_ID,
        UPDATED_TIME
    </sql>

    <sql id="Base_Properties">
        #{id, jdbcType=VARCHAR},
        #{permissionKey, jdbcType=VARCHAR},
        #{permissionGroup, jdbcType=VARCHAR},
        #{permissionUrl, jdbcType=VARCHAR},
        #{permissionAction, jdbcType=VARCHAR},
        #{description, jdbcType=VARCHAR},
        #{active, jdbcType=VARCHAR},
        #{parentId, jdbcType=VARCHAR},
        #{createdUserId, jdbcType=VARCHAR},
        #{createdTime, jdbcType=TIMESTAMP},
        #{updatedUserId, jdbcType=VARCHAR},
        #{updatedTime, jdbcType=TIMESTAMP}
    </sql>

    <select id="findRolePermission" resultType="com.github.tanxinzheng.module.authorization.domain.dto.PermissionDTO">
        SELECT
            p.ID,
            p.PERMISSION_KEY,
            p.PERMISSION_GROUP,
            p.PERMISSION_URL,
            p.PERMISSION_ACTION,
            p.DESCRIPTION,
            p.ACTIVE
        FROM
            xmo_permission p
        LEFT JOIN xmo_role_permission_relation rpr ON rpr.PERMISSION_ID = p.id
        <where>
            <if test="isRelate">
                rpr.ROLE_ID = #{roleId}
            </if>
            <if test="!isRelate">
                NOT EXISTS ( SELECT PERMISSION_ID FROM xmo_role_permission_relation WHERE role_id = #{roleId} and p.id = PERMISSION_ID )
            </if>
        </where>
    </select>


</mapper>