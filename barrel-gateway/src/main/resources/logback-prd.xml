<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
    <!--  Define the storage location of the log files. (勿在LogBack里面使用相对路径)                                                                         -->
    <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
    <springProperty scope="context" name="application.name" source="spring.application.name"/>
    <springProperty scope="context" name="log.file.path" source="logging.file.path"/>
    <springProperty scope="context" name="aliyun.endpoint" source="aliyun.sls.endpoint"/>
    <springProperty scope="context" name="aliyun.accessKeyId" source="aliyun.sls.accessKeyId"/>
    <springProperty scope="context" name="aliyun.accessKeySecret" source="aliyun.sls.accessKeySecret"/>
    <springProperty scope="context" name="aliyun.project" source="aliyun.sls.project"/>
    <springProperty scope="context" name="aliyun.logStore" source="aliyun.sls.logStore"/>

    <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
    <!--  Console output                                                                                                        -->
    <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->

    <!-- 控制台输出日志规则  -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!--  默认控制台输出格式  -->
<!--        <layout class="ch.qos.logback.classic.PatternLayout">-->
<!--                &lt;!&ndash; 格式化输出：%d: 表示日志  %-5level: 级别从左显示级别 %X{requestId}：自定义MDC参数-requestId %n：换行符    &ndash;&gt; -->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
<!--        </layout>-->
        <!-- 使用自定义颜色配置，对性能消耗有影响，正式环境需注释控制台输出日志打印 -->
        <encoder>
            <!--  自定义控制台日志输出格式，添加日根据日志级别打印不同颜色的效果，便于识别错误日子  -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS, Asia/Shanghai} %-5level [%X{X-B3-TraceId},%X{X-B3-SpanId},%X{X-B3-ParentSpanId}] [%X{requestId}] [%thread] %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${log.file.path}/${application.name}/info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>${log.file.path}/${application.name}/info.%d{yyyyMMdd}.%i.log</FileNamePattern>
            <!-- 日志文件最大保留天数 -->
            <MaxHistory>30</MaxHistory>
            <!-- 最大文件滚动策略 -->
            <maxFileSize>100MB</maxFileSize>
            <!-- 归档日志文件最大值 -->
            <totalSizeCap>1GB</totalSizeCap>
            <!-- 是否自动清除历史归档文件   -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <!-- 追加方式记录日志 -->
        <append>true</append>
        <!-- 日志文件的输出格式规则 -->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <!-- 格式化输出：%d: 表示日志  %-5level: 级别从左显示级别 %X{ip}：自定义MDC参数-requestId %n：换行符 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS, Asia/Shanghai} %-5level [%X{X-B3-TraceId},%X{X-B3-SpanId},%X{X-B3-ParentSpanId}] [%X{requestId}] [%thread] %logger{50} - %msg%n</pattern>
        </layout>
        <!-- 此日志文件只接收某级别的日志，用于记录重要业务日志文件时使用 -->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>info</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
    </appender>

    <!--为了防止进程退出时，内存中的数据丢失，请加上此选项-->
    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>

    <appender name="ALIYUN-LOGHUB" class="com.aliyun.openservices.log.logback.LoghubAppender">
        <!--必选项-->
        <!-- 账号及网络配置 -->
        <endpoint>${aliyun.endpoint}</endpoint>
        <accessKeyId>${aliyun.accessKeyId}</accessKeyId>
        <accessKeySecret>${aliyun.accessKeySecret}</accessKeySecret>

        <!-- sls 项目配置 -->
        <project>${aliyun.project}</project>
        <logStore>${aliyun.logStore}</logStore>
        <!--必选项 (end)-->

        <!-- 可选项 -->
        <!--        <topic>topic1</topic>-->
        <source>${application.name}</source>
        <!-- 可选项 详见 '参数说明'-->
        <totalSizeInBytes>104857600</totalSizeInBytes>
        <maxBlockMs>60000</maxBlockMs>
        <ioThreadCount>8</ioThreadCount>
        <batchSizeThresholdInBytes>524288</batchSizeThresholdInBytes>
        <batchCountThreshold>4096</batchCountThreshold>
        <lingerMs>2000</lingerMs>
        <retries>10</retries>
        <baseRetryBackoffMs>100</baseRetryBackoffMs>
        <maxRetryBackoffMs>100</maxRetryBackoffMs>
        <mdcFields>X-B3-TraceId,X-B3-SpanId,X-B3-ParentSpanId,THREAD_ID,requestId,MDC_KEY</mdcFields>
    </appender>

    <root level="info">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
        <appender-ref ref="ALIYUN-LOGHUB" />
    </root>

</configuration>